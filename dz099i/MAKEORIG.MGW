#
#  Rules for building the Allegro library with egcs / mingw32. This file
#  is included by the primary makefile, and should not be used directly.
#
#  The "depend" target, the export definition file and the fixdll-include use sed.


PLATFORM = MINGW32

EXE = .exe
OBJ = .o
HTML = html

# For Mingw32 we can not adhere to any directory standard for installation.
# The default install is to copy includes and libs to ...i386-mingw32/include
# and ...i386-mingw32/lib and the dll into the Windows directory.
# Those who wish to keep their Mingw32 directory tree clean can specify
# make install prefix=install_dir where install_dir is an existing directory
# containing the subdirectories /include, /lib, /bin.
# E.g. make install prefix=install_here, make uninstall prefix=install_here

ifneq (,$(findstring /sh.exe,$(SHELL)))
  CP := command -c copy
  _S := /
  _Q := "
else
  CP := copy
  _S := $(subst \,/,/)
endif

OBJ_BASE = obj/mingw32
OBJ_BASE_D := $(subst /,\,$(OBJ_BASE)/)

    # -------- link as a DLL --------
    OBJ_DIR = $(OBJ_BASE)/$(VERSION)
    DLL_BASENAME = $(SHORT_VERSION)$(LIBRARY_VERSION).dll
    DLL_NAME = lib/mingw32/$(DLL_BASENAME)
    IMPLIB_BASENAME = lib$(VERSION).a
    IMPLIB_NAME = lib/mingw32/$(IMPLIB_BASENAME)
    EXPDEF_BASENAME = allegro.def
    EXPDEF_NAME = lib/mingw32/$(EXPDEF_BASENAME)
    LIB_NAME = $(IMPLIB_NAME)
    RUNNER =  $(EXPDEF_NAME)

# -------- check that environment path variable is set --------
#
.PHONY: badwin badming

ifeq ($(OS),Windows_NT)
  WINSYSDIR = $(SYSTEMROOT)
  WINSUBDIR = system32
else
  WINSYSDIR = $(windir)
  WINSUBDIR = system
endif

ifneq ($(WINSYSDIR),)
  WINDIR =$(WINSYSDIR)\$(WINSUBDIR)
else
badwin:
	@echo Your SYSTEMROOT or windir environment variable is not set!
endif

ifeq ($(MINGDIR),)
badming:
	@echo Please specify your mingw32 directory via MINGDIR=. See the readme.mgw file!
endif


# -------- give a sensible default target for make without any args --------
#
.PHONY: _default

_default: default


# -------- decide what compiler options to use --------
#
ifdef WARNMODE
    WFLAGS = -Wall -W -Werror -Wno-unused
else
    WFLAGS = -Wall -Wno-unused
endif

ifdef PGCC
    OFLAGS = -mpentium -O6 -ffast-math
else
    OFLAGS = -m486 -O3 -ffast-math
endif

ifdef DEBUGMODE
    # -------- debugging build --------
    CFLAGS = -DDEBUGMODE=$(DEBUGMODE) $(WFLAGS) -g
    SFLAGS = -DDEBUGMODE=$(DEBUGMODE) $(WFLAGS)
    LFLAGS += -g
else
ifdef PROFILEMODE
    # -------- profiling build --------
    CFLAGS = $(WFLAGS) $(OFLAGS) -pg
    SFLAGS = $(WFLAGS)
    LFLAGS += -pg
else
    # -------- optimised build --------
    CFLAGS = $(WFLAGS) $(OFLAGS) -fomit-frame-pointer -fno-strength-reduce
    SFLAGS = $(WFLAGS)
  ifndef SYMBOLMODE
    LFLAGS += -s
  endif
endif
endif



# -------- include files / directories --------
#

INCLUDE_FILES = $(addprefix include/,allegro.h winalleg.h          \
		$(addprefix allegro/,alwin.h aintern.h aintwin.h alconfig.h almngw32.h))

# -------- list which platform specific programs --------
#
VPATH = wintests

PROGRAMS = dibgrab dibhello

dibgrab: wintests/dibgrab.exe
dibhello: wintests/dibhello.exe

# -------- rules for installing and removing the library files --------
#

ifdef prefix
  PREFIX  = $(prefix)
  BIN_DIR = $(PREFIX)\bin
else
  BIN_DIR = $(WINDIR)
  PREFIX := $(subst /,\,$(MINGDIR))
endif

INC_DIR = $(PREFIX)\include
LIB_DIR = $(PREFIX)\lib

$(LIB_DIR)\$(IMPLIB_BASENAME): $(IMPLIB_NAME)
	copy lib\mingw32\$(IMPLIB_BASENAME) $(LIB_DIR)

$(INC_DIR)/%: include/%
	copy $(subst /,\,$< $@)

$(INC_DIR)\allegro/%.h: include\allegro/%.h $(INC_DIR)\allegro
	copy $(subst /,\,$< $@)

$(INC_DIR)\allegro:
	-md "$(INC_DIR)\allegro"

HEADERS = $(addprefix $(PREFIX)\,$(wildcard include\allegro/*.h))

INSTALL_FILES = $(LIB_DIR)\$(IMPLIB_BASENAME) \
		$(INC_DIR)/allegro.h \
		$(INC_DIR)/winalleg.h \
		$(INC_DIR)\allegro \
		$(HEADERS)

install: $(INSTALL_FILES)

UNINSTALL_FILES = \
      $(LIB_DIR)\alleg.a $(LIB_DIR)\alld.a $(LIB_DIR)\allp.a \
      $(LIB_DIR)\alleg_s.a $(LIB_DIR)\alld_s.a $(LIB_DIR)\allp_s.a \
      $(INC_DIR)\allegro.h $(INC_DIR)\winalleg.h $(INC_DIR)\allegro\*.h

uninstall:
	-rm -fv $(subst \,/,$(UNINSTALL_FILES))
	rd $(INC_DIR)\allegro
	@echo All gone!

#--------------------------------------------------------------------------------------------------
#
# -------- finally, we get to the fun part... --------
#

# -------- use dynamic library --------
define MAKE_LIB
  dlltool --dllname $(DLL_BASENAME) --def $(EXPDEF_NAME) --output-lib $(IMPLIB_NAME)
endef

COMPILE_FLAGS += $(subst src/,-DALLEGRO_SRC ,$(findstring src/, $<))$(CFLAGS)

$(OBJ_DIR)/%.o: %.c
	gcc $(COMPILE_FLAGS) -I. -I./include -o $@ -c $<

$(OBJ_DIR)/%.o: %.s
	gcc $(SFLAGS) -I. -I./include -x assembler-with-cpp -o $@ -c $<

*/%.exe: $(OBJ_DIR)/%.o $(IMPLIB_NAME)
	gcc $(LFLAGS) -mwindows -o $@ $< $(LIB_NAME) $(LDLIBS)

LINK_CONSOLE_DEPS = $(IMPLIB_NAME)

define LINK_CONSOLE
  gcc $(LFLAGS) -o $@ $< $(LIB_NAME) $(LDLIBS)
endef

$(EXPDEF_NAME):
	@echo Run fixdll to generate allegro.def!

PLUGIN_LIB = lib/mingw32/lib$(VERY_SHORT_VERSION)dat.a
PLUGINS_H = obj/mingw32/plugins.h
PLUGIN_DEPS = $(LIB_NAME) $(PLUGIN_LIB)
PLUGIN_SCR = scx

define GENERATE_PLUGINS_H
  copy tools\plugins\*.inc obj\mingw32\plugins.h
endef

define MAKE_PLUGIN_LIB
  ar rcs $(PLUGIN_LIB) $(PLUGIN_OBJS)
endef

define LINK_WITH_PLUGINS
  gcc $(LFLAGS) -o $@ $< $(strip $(PLUGIN_LIB) $(addprefix @,$(PLUGIN_SCRIPTS)) $(LIB_NAME) $(LIBRARIES))
endef


# -------- generate automatic dependencies --------

depend:
	gcc -MM -MG -I. -I./include demo/*.c examples/*.c setup/*.c tests/*.c > _depend.tmp
	gcc -MM -MG -I. -I./include wintests/*.c tools/*.c tools/plugins/*.c >> _depend.tmp
	sed -e "s/\\/\//g" -e "s/\/$$/\\/" -e "s/^[a-zA-Z0-9_\/]*\///" -e "s/ \.\// /g" _depend.tmp > _depend1.tmp
	sed -e "s/asmdef\.o/asmdef\.exe/" _depend1.tmp > _depend.tmp
	sed -e "s/^\([a-zA-Z0-9_]*\.o:\)/obj\/mingw32\/alleg\/\1/" _depend.tmp > $(OBJ_BASE_D)alleg\makefile.dep
	sed -e "s/^\([a-zA-Z0-9_]*\.o:\)/obj\/mingw32\/alld\/\1/" _depend.tmp > $(OBJ_BASE_D)alld\makefile.dep
	sed -e "s/^\([a-zA-Z0-9_]*\.o:\)/obj\/mingw32\/allp\/\1/" _depend.tmp > $(OBJ_BASE_D)allp\makefile.dep
	rm -f _depend.tmp _depend1.tmp


